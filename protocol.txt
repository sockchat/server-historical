                      SOCK CHAT PROTOCOL INFORMATION

    Messages sent between the client and server are a series of concatenat-
ed strings delimited by the vertical tab character, represented in most la-
nguages by the escape sequence \t and defined as the ASCII character 0x09. 
The first string in this concatenation must be the packet identifier, sent
as an integer. The packet identifiers are as follows.

                              --- SERVER ---                                

0 - User keepalive ping. Done to prevent the client from closin the session
    due to socket inactivity. The only parameter is the user id.
    
1 - User join request. Takes a variable number of parameters that are fed
    into the authentication script associated with the chat.
    
2 - User message. The first parameter is the user id, the second parameter
    is the message.
                              
                              --- CLIENT ---
                              
0 - Keepalive ping response. Not actually handled, but the client does rec-
    eive it. Maybe do something with this later, I dunno. First and only 
    parameter is always the string 'pong'.

1 - User joining message. Takes two different forms depending on the recip-
    ient.
    
    If the recipient is not the joining user, the arguments are as follows:
        - TIMESTAMP
        - USER ID
        - USER NAME
        - USER COLOR
        - PERMISSION STRING
        - MESSAGE ID
        
    If the recipient is the joining user, the arguments depend on the first
    parameter of the message.
    
    If 'y' (connection accepted), the parameters are as follows:
        - USER ID
        - USER NAME
        - USER COLOR
        - PERMISSION STRING
        - DEFAULT CHANNEL
        - MAX MESSAGE LENGTH
    
    If 'n' (connection refused), the parameters are as follows:
        - REASON ENUMERATION
            - 0: AUTH DATA IS WRONG
            - 1: USERNAME IN USE
            - 2: SOCKET SESSION ALREADY STARTED
            - 3: BANNED
                - followed by unban timestamp
                
2 - Chat message to be parsed. Takes a general form but has a special case
    for bot messages.
    
    - TIMESTAMP
    - USER ID
    - MESSAGE (SANITIZED)
    - MESSAGE ID
    
    If the message is sent by the chat bot, the USER ID will be set to -1,
    and the MESSAGE will be a series of strings concatenated by the form
    feed operator, ASCII character 0x0C represented by the escape sequence
    \f. The strings will take the following form:
        - MESSAGE TYPE ENUMERATION
            - 0 if normal message
            - 1 if error message
        - LANG FILE ID STRING
        - PARAMETERS
            - the additional parameters as fed into the lang string
            
3 - User disconnect notification.

4 - Channel creation/deletion/update notification to clients. First parame-
    ter is either a 0, a 1 or a 2, 0 indicating creation, 1 indicating del-
    etion, and 2 indicating an update.
    
    If 0, the parameters are as follows:
        - CHANNEL NAME
        - IS PASSWORD PROTECTED (bool, 1 or 0)
        - IS TEMPORARY (bool, 1 or 0)
        
    If 1, the parameters are as follows:
        - CHANNEL NAME
        
    If 2, the parameters are as follows:
        - OLD CHANNEL NAME
        - NEW CHANNEL NAME
        - IS PASSWORD PROTECTED (bool, 1 or 0)
        - IS TEMPORARY (bool, 1 or 0)
    
5 - User changing channel information for clients. First parameter is 0 or 
    1 to indicate whether the user is joining or leaving, the following pa-
    rameters depend on the first:
    
        Both will start with a message ID representing the ID of the bot
        message associated with the action.
    
        If 0, the parameters are as follows:
            - USER ID
            - USER NAME
            - USER COLOR
            - PERMISSION STRING
        And indicates a user joining a channel.
            
        If 1, the parameters are as follows:
            - USER ID
        And indicates a user leaving a channel.
        
6 - Indicates forceful message deletion. The first parameter is the message
    ID as it is represented in Message::$msgid.
    
7 - Indicates the sending of miscellaneous data to clients for context inf-
    ormation. First parameter is 0, 1, or 2 to indicate whether the data is
    a chat message, a user, or a channel. The following parameters depend
    on the first:
    
        If 0, the parameters are as follows:
            - A COUNT OF USERS SENT IN PACKET (represented as N)
            - N REPETITIONS OF
                - USER ID
                - USER NAME
                - USER COLOR
                - PERMISSION STRING
              WHICH EACH REPRESENT A SINGLE USER
            
        If 1, the parameters are as follows:
            - TIMESTAMP
            - USER ID
            - USER NAME
            - USER COLOR
            - PERMISSION STRING
            - MESSAGE
            - MESSAGE ID
            
        If 2, the parameters are as follows:
            - A COUNT OF CHANNELS SENT IN PACKET (represented as N)
            - N REPETITIONS OF
                - CHANNEL NAME
                - IS PASSWORD PROTECTED (bool, 1 or 0)
                - IS TEMPORARY (bool, 1 or 0)
              WHICH EACH REPRESENT A SINGLE CHANNEL
              
8 - Forces the client to clear a specific portion of the context. First pa-
    rameter is an integer from 0 to 4 to indicate what should be cleared.
    
        0 represents clearing the message list.
        1 represents clearing the user list.
        2 represents clearing the channel list.
        3 represents clearing both the message and user list.
        4 represents clearing all three lists.
        
9 - Tells a client that they are about to have their socket session forcef-
    ully terminated. Used to indicate either a kick or a ban.
    
    First argument is a 0, representing a kick, or a 1, representing a ban.
    If the first argument is 1, then the following argument is a length sp-
    ecifier for the ban duration in unix epoch time.
    
10- Informs clients (usually in same channel) that data on a specific user 
    has been changed. Used for things like changing nicknames or temporary
    privilege elevation.
    
    The first argument is the user ID of the affected user (which can never
    change). Following are the details of the user:
    
        - USER NAME
        - USER COLOR
        - PERMISSION STRING